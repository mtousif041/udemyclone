we used
mongoDb 
Express
React
Nodejs
Stripe
shedCn ui -> iske liye aapka nodejs ka version 20.18.0 hona chaye aur npm ka 10.8.2
/////////for state mngmnt
Redux
   . RTK query -> ye unnecessaery api call ko optimized krta hai , yaani ye ekbaar kisi cheez ko fetch kr lega to usko dobara fetch krne ke liye wapas api ko call nhai krega
   RTK query : isme data fetching ka  logic bhaut powerfull hota hai , aur saath saath caching use krta hai yaani jese ki ek baar api call hoga sirf baar baar unnecessory api call nhai hogi 
   RTK isi me hota hai npm install @reduxjs/toolkit

//////////////////////////////
npm create vite@latest
.
React
javascript 
npm install
npm install -D tailwindcss postcss autoprefixer   ==for installing tailwind css
npx tailwindcss init -p


npm install @reduxjs/toolkit
npm install react-redux
npm i react-router-dom
npm i react-quill
npm i axios
npm i react-player
npm i recharts



in index.css
@tailwind base;
@tailwind components;
@tailwind utilities;


in tailwind.config.js
/** @type {import('tailwindcss').Config} */
export default {
  content: ["./index.html", "./src/**/*.{ts,tsx,js,jsx}"],
  theme: {
    extend: {},
  },
  plugins: [],
}


fir client me jsconfig.json file create krke usme ye copy krde 
{ 
   "compilerOptions": {
    "baseUrl": ".",
    "paths": {
      "@/*": ["./src/*"]
    }
  }
  }


fir vite.config.js me
import path from "path"
import react from "@vitejs/plugin-react"
import { defineConfig } from "vite"

export default defineConfig({
  plugins: [react()],
  resolve: {
    alias: {
      "@": path.resolve(__dirname, "./src"),
    },
  },
})



npx shadcn@latest init
>   New York

>   Slate

? Would you like to use CSS variables for theming? Â» / yes


// ab project create ho jayega aur tum ab shadsn ui ke componet ko use kr shakte ho , jese ki agr tume koi button add krna hai to phele usko install krna pdega like 
npx shadcn@latest add button
ye componets\ui me file ban jayegi button.jsx naam se , fir aap ise khai bhi simply use kr shakte ho
import "./App.css";
import { Button } from "./components/ui/button";

function App() {
  return (
    <>
      <Button>Let's build LMS : fire</Button>
    </>
  );
}

export default App;



npm run dev

fir app.jsx ko clear krlo 
aur app.css ko bhi clear krdo

npx shadcn@latest add tabs
npx shadcn@latest add card
npx shadcn@latest add input label
npx shadcn@latest add sonner
npx shadcn@latest add dropdown-menu
npx shadcn@latest add avatar
npx shadcn@latest add sheet
npx shadcn@latest add skeleton
npx shadcn@latest add badge
npx shadcn@latest add dialog
npx shadcn@latest add table
npx shadcn@latest add select
npx shadcn@latest add switch
npx shadcn@latest add progress
npx shadcn@latest add separator
npx shadcn@latest add checkbox








mongoDb
bCD3UNlFlXAvazYO
mohammedtousif047
mongodb+srv://mohammedtousif047:bCD3UNlFlXAvazYO@cluster0.eauuc.mongodb.net/



///////////////////////////backend ///////////////////////////////////////////////////////////////////////////////////////////////
 npm -y init   -y isliye taki vo baar baaar khuch puche na direct project create krdo 
 npm i express mongoose cors dotenv bcryptjs jsonwebtoken nodemon
 npm i cookie-parser
 npm i multer
 npm i cloudinary
 npm i stripe

 in index.js
 import express from "express";

const app = express();

const PORT = 8080;

app.listen(PORT, ()=>{
    console.log(`server listen on port ${PORT}`);
    
})


in package.json
 "scripts": {
    "dev":"nodemon index.js"
  },


  npm run dev



  /////stripe 
  4111 1111 1111 1111
  12/24     526




////////////////////    NOTE    //////////////////////////////
is project me do kaam krne baak hai ek to enviroments variable me path dena 
dusra ek stripe wali command ko chalana hai , stripe se payment krne ke liye stripe ki command ko terminal me always chalu rhakna pdega 




 <div className="space-y-1">
                <Label htmlFor="name">Name</Label>
                <Input
                  type="text"
                  name="name"
                  value={signupInput.name}
                  onChange={(e) => changeInputHandler(e, "signup")}
                  placeholder="eg. Mohammed Tousif"
                  required="true"
                />
              </div>




  const [signupInput, setSignupInput] = useState({
    name: "",
    email: "",
    password: "",
  });
  const [loginInput, setLoginInput] = useState({ email: "", password: "" });




////////////////////////////////////////////////
Learning management System in which instructors can upload courses and students purcahsing that courses if not free and learning. course search by search bar and filtration by category and sort by price using state lifting up control vs uncontrol component. route protecting, user can not  access withoute login aur user can not access admin panel if user's role is not instructor.  project create  using these technologies mongodb, express, react, nodejs, reduxjs/toolkit rtk-query for state managmnt for avoiding unnecessaery api call, shedCn ui for predesigened and responsive component ,   tailwind css for responsiveness styling, light and dark theme toggle,
mongoose,
cors, dotenv,
bcryptjs,
jsonwebtoken,
cookie-paeser,
multer,
cloudinary,
react-player for video playing
RichTextEditor from react-quill,
recharts for display data in chart form,
stripe for payment using stripe and stripe webhook,